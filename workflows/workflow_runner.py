# from workflows.workflow_graph import create_graph, compile_workflow
# from config.config import app_config
# from dataclasses import field
# from typing import Dict
# from IPython.display import Image, display

# def run_workflow():
#     """
#     Run the compiled workflow and handle the events generated by it.
#     """
#     # Create and compile the graph
#     graph = create_graph()
#     workflow = compile_workflow(graph)

#     # Display the workflow graph (if you are using a notebook environment)
#     display(Image(workflow.get_graph().draw_png()))

#     # Define workflow inputs
#     user_request = "Bring me the content on this page: https://example.com/"
#     dict_inputs = {"user_request": user_request}
    
#     # config = {"configurable": {"thread_id": "1"}}
#     workflow_config: Dict[str, any] = field(default_factory=lambda: {"thread_id": "1"})
#     config = {"configurable": workflow_config}

#     # Execute the workflow
#     for event in workflow.stream(dict_inputs, config=config):
#         if app_config.verbose:
#             print(event)
#         else:
#             print("\n")

# if __name__ == "__main__":
#     run_workflow()
